{"ast":null,"code":"import axios from 'axios';\nimport * as alertActions from '../alert/alert.action';\nimport { useDispatch } from \"react-redux\";\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAILURE = \"USER_REGISTER_FAILURE\";\nexport const userRegister = (user, history) => {\n  var _s = $RefreshSig$();\n\n  return _s(async dispatch => {\n    _s();\n\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n\n    try {\n      let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/users/register`;\n      let response = await axios.post(dataUrl, user);\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: response.data\n      });\n      useDispatch(alertActions.displayAlert(response.data.msg, 'success')); // alert message\n\n      history.push('/users/login');\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAILURE,\n        payload: error\n      });\n    }\n  }, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n    return [useDispatch];\n  });\n};","map":{"version":3,"sources":["F:/Workspace/Projects/Brains-Kart/client/src/redux/users/user.action.ts"],"names":["axios","alertActions","useDispatch","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","userRegister","user","history","dispatch","type","dataUrl","process","env","REACT_APP_SERVER_URL","response","post","payload","data","displayAlert","msg","push","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,YAAZ,MAA8B,uBAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAGA,OAAQ,MAAMC,qBAA8B,GAAG,uBAAvC;AACR,OAAQ,MAAMC,qBAA8B,GAAG,uBAAvC;AACR,OAAQ,MAAMC,qBAA8B,GAAG,uBAAvC;AAQR,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAgBC,OAAhB,KAAkC;AAAA;;AAC1D,YAAO,MAAOC,QAAP,IAAyB;AAAA;;AAC5BA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAGP;AADF,KAAD,CAAR;;AAGG,QAAG;AACC,UAAIQ,OAA4B,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,qBAAvE;AACA,UAAIC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAWL,OAAX,EAAqBJ,IAArB,CAArB;AACAE,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAGN,qBADF;AAELa,QAAAA,OAAO,EAAGF,QAAQ,CAACG;AAFd,OAAD,CAAR;AAIAhB,MAAAA,WAAW,CAACD,YAAY,CAACkB,YAAb,CAA0BJ,QAAQ,CAACG,IAAT,CAAcE,GAAxC,EAA6C,SAA7C,CAAD,CAAX,CAPD,CAOsE;;AACrEZ,MAAAA,OAAO,CAACa,IAAR,CAAa,cAAb;AACH,KATD,CAUD,OAAOC,KAAP,EAAc;AACZb,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAGL,qBADF;AAELY,QAAAA,OAAO,EAAGK;AAFL,OAAD,CAAR;AAID;AACN,GApBD;AAAA,YAWWpB,WAXX;AAAA;AAqBH,CAtBM","sourcesContent":["import axios from 'axios';\r\nimport * as alertActions from '../alert/alert.action';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport  const USER_REGISTER_REQUEST : string = \"USER_REGISTER_REQUEST\"\r\nexport  const USER_REGISTER_SUCCESS : string = \"USER_REGISTER_SUCCESS\"\r\nexport  const USER_REGISTER_FAILURE : string = \"USER_REGISTER_FAILURE\"\r\n\r\ninterface  IUser{\r\n    name : string,\r\n    email : string,\r\n    password: string\r\n}\r\n\r\nexport const userRegister = (user : IUser , history : any) => {\r\n    return async (dispatch : any) =>{\r\n        dispatch({\r\n            type : USER_REGISTER_REQUEST\r\n        })\r\n           try{\r\n               let dataUrl : string | undefined = `${process.env.REACT_APP_SERVER_URL}/api/users/register`\r\n               let response = await axios.post(dataUrl , user)\r\n               dispatch({\r\n                   type : USER_REGISTER_SUCCESS,\r\n                   payload : response.data\r\n               })\r\n               useDispatch(alertActions.displayAlert(response.data.msg ,'success')) // alert message\r\n               history.push('/users/login');\r\n           }\r\n          catch (error) {\r\n            dispatch({\r\n                type : USER_REGISTER_FAILURE,\r\n                payload : error\r\n            })\r\n          }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}