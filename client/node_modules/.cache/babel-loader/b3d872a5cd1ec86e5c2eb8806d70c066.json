{"ast":null,"code":"import axios from 'axios';\nimport * as alertActions from '../alert/alert.action';\nimport * as AuthUtil from '../../Authentication/AuthUtil';\nimport { setHeaders } from \"../../Authentication/TokenUtil\";\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAILURE = \"USER_REGISTER_FAILURE\";\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAILURE = \"USER_LOGIN_FAILURE\";\nexport const USER_INFO_REQUEST = \"USER_INFO_REQUEST\";\nexport const USER_INFO_SUCCESS = \"USER_INFO_SUCCESS\";\nexport const USER_INFO_FAILURE = \"USER_INFO_FAILURE\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n//register user\nexport const userRegister = (user, history) => {\n  return async dispatch => {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n\n    try {\n      let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/users/register`;\n      let response = await axios.post(dataUrl, user);\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: response.data\n      });\n      dispatch(alertActions.displayAlert(response.data.msg, 'success')); // alert message\n\n      history.push('/users/login');\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAILURE,\n        payload: error\n      });\n    }\n  };\n}; //login user\n\nexport const loginUser = (user, history) => {\n  return async dispatch => {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n\n    try {\n      let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/users/login`;\n      let response = await axios.post(dataUrl, user);\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: response.data\n      });\n      dispatch(alertActions.displayAlert(response.data.msg, 'success'));\n      history.push('/');\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const getUserInfo = () => {\n  return async dispatch => {\n    dispatch({\n      type: USER_INFO_REQUEST\n    });\n\n    if (AuthUtil.isLoggedIn()) {\n      let token = AuthUtil.getToken();\n      setHeaders(token);\n      let datUrl = `${process.env.REACT_APP_FEATURE_KEY}/api/users/`;\n      let reponse = axios.get(datUrl);\n    }\n  };\n};\nexport const logoutUser = () => {\n  return dispatch => {\n    dispatch({\n      type: LOGOUT_USER\n    });\n    dispatch(alertActions.displayAlert(\"You have logged out\", \"success\"));\n  };\n};","map":{"version":3,"sources":["F:/Workspace/Projects/Brains-Kart/client/src/redux/users/user.action.ts"],"names":["axios","alertActions","AuthUtil","setHeaders","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_INFO_REQUEST","USER_INFO_SUCCESS","USER_INFO_FAILURE","LOGOUT_USER","userRegister","user","history","dispatch","type","dataUrl","process","env","REACT_APP_SERVER_URL","response","post","payload","data","displayAlert","msg","push","error","loginUser","getUserInfo","isLoggedIn","token","getToken","datUrl","REACT_APP_FEATURE_KEY","reponse","get","logoutUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport * as alertActions from '../alert/alert.action';\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as AuthUtil from '../../Authentication/AuthUtil'\r\nimport {setHeaders} from \"../../Authentication/TokenUtil\";\r\n\r\n\r\nexport  const USER_REGISTER_REQUEST : string = \"USER_REGISTER_REQUEST\"\r\nexport  const USER_REGISTER_SUCCESS : string = \"USER_REGISTER_SUCCESS\"\r\nexport  const USER_REGISTER_FAILURE : string = \"USER_REGISTER_FAILURE\"\r\n\r\nexport  const USER_LOGIN_REQUEST : string = \"USER_LOGIN_REQUEST\"\r\nexport  const USER_LOGIN_SUCCESS : string = \"USER_LOGIN_SUCCESS\"\r\nexport  const USER_LOGIN_FAILURE : string = \"USER_LOGIN_FAILURE\"\r\n\r\nexport  const USER_INFO_REQUEST : string = \"USER_INFO_REQUEST\"\r\nexport  const USER_INFO_SUCCESS : string = \"USER_INFO_SUCCESS\"\r\nexport  const USER_INFO_FAILURE : string = \"USER_INFO_FAILURE\"\r\n\r\nexport const LOGOUT_USER : string = \"LOGOUT_USER\"\r\n\r\ninterface  IUser{\r\n    name? : string,\r\n    email : string,\r\n    password: string\r\n}\r\n//register user\r\nexport const userRegister = (user : IUser , history : any) => {\r\n    return async (dispatch : any) =>{\r\n        dispatch({\r\n            type : USER_REGISTER_REQUEST\r\n        })\r\n           try{\r\n               let dataUrl : string | undefined = `${process.env.REACT_APP_SERVER_URL}/api/users/register`\r\n               let response = await axios.post(dataUrl , user)\r\n               dispatch({\r\n                   type : USER_REGISTER_SUCCESS,\r\n                   payload : response.data\r\n               })\r\n               dispatch(alertActions.displayAlert(response.data.msg ,'success')) // alert message\r\n               history.push('/users/login');\r\n           }\r\n          catch (error) {\r\n            dispatch({\r\n                type : USER_REGISTER_FAILURE,\r\n                payload : error\r\n            })\r\n          }\r\n    }\r\n}\r\n//login user\r\n\r\nexport  const loginUser = (user : IUser , history : any) => {\r\n    return async (dispatch : any) => {\r\n        dispatch({\r\n            type : USER_LOGIN_REQUEST\r\n        })\r\n        try{\r\n            let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/users/login`\r\n            let response =  await  axios.post(dataUrl , user)\r\n            dispatch({\r\n                type : USER_LOGIN_SUCCESS,\r\n                payload : response.data\r\n            })\r\n            dispatch(alertActions.displayAlert(response.data.msg , 'success'));\r\n            history.push('/');\r\n        }\r\n        catch (error){\r\n            dispatch({\r\n                type : USER_LOGIN_FAILURE,\r\n                payload : error\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n    return async (dispatch : any) => {\r\n        dispatch({\r\n            type : USER_INFO_REQUEST\r\n        })\r\n        if(AuthUtil.isLoggedIn()){\r\n            let token : string | null= AuthUtil.getToken();\r\n            setHeaders(token as string);\r\n            let datUrl = `${process.env.REACT_APP_FEATURE_KEY}/api/users/`\r\n            let reponse = axios.get(datUrl)\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return (dispatch : any) => {\r\n        dispatch({\r\n            type : LOGOUT_USER\r\n        })\r\n        dispatch(alertActions.displayAlert(\"You have logged out\" , \"success\"));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}