{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Projects\\\\Brains-Kart\\\\brainskart-ecommerce-project\\\\client\\\\src\\\\router\\\\PrivateRoute.tsx\";\nimport React from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport * as AuthUtil from \"../Authentication/AuthUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// @ts-ignore\nlet PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      return !AuthUtil.isLoggedIn() ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/users/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 73\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["F:/Workspace/Projects/Brains-Kart/brainskart-ecommerce-project/client/src/router/PrivateRoute.tsx"],"names":["React","Route","Redirect","AuthUtil","PrivateRoute","component","Component","rest","props","isLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAgBC,QAAhB,QAA4C,kBAA5C;AACA,OAAO,KAAKC,QAAZ,MAA0B,4BAA1B;;;AAKA;AACA,IAAIC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAGC,SAAb;AAAyB,KAAGC;AAA5B,CAAD,KAAuC;AACtD,sBAAO,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAGC,KAAD,IAAW;AACvC,aAAO,CAACL,QAAQ,CAACM,UAAT,EAAD,gBAAyB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAzB,gBAAyD,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,cAAhE;AACH;AAFM;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAJD;;KAAIJ,Y;AAKJ,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport {Route , Redirect , RouteProps} from 'react-router-dom';\r\nimport * as AuthUtil from \"../Authentication/AuthUtil\";\r\n\r\ninterface Iprops{\r\n\r\n}\r\n// @ts-ignore\r\nlet PrivateRoute = ({component : Component , ...rest}) => {\r\n    return <Route {...rest} render={(props) => {\r\n        return !AuthUtil.isLoggedIn() ? <Redirect to=\"/users/login\"/> : <Component {...props}/>\r\n    }}/>\r\n};\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}