{"ast":null,"code":"import * as AuthUtil from \"../../Authentication/AuthUtil\";\nimport * as TokenUtil from \"../../Authentication/TokenUtil\";\nimport axios from \"axios\";\nimport { setHeaders } from \"../../Authentication/TokenUtil\";\nexport const ADD_TO_CART_REQUEST = \"ADD_TO_CART_REQUEST\";\nexport const ADD_TO_CART_FAILURE = \"ADD_TO_CART_FAILURE\";\nexport const INCREMENT_PRODUCT_QTY = \"INCREMENT_PRODUCT_QTY\";\nexport const DECREMENT_PRODUCT_QTY = \"DECREMENT_PRODUCT_QTY\";\nexport const REMOVE_CART_ITEM = \"REMOVE_CART_ITEM\";\nexport const MAKE_PAYMENT_REQUEST = \"MAKE_PAYMENT_REQUEST\";\nexport const MAKE_PAYMENT_SUCCESS = \"MAKE_PAYMENT_SUCCESS\";\nexport const MAKE_PAYMENT_FAILURE = \"MAKE_PAYMENT_FAILURE\";\nexport const PLACE_ORDER_REQUEST = \"PLACE_ORDER_REQUEST\";\nexport const PLACE_ORDER_SUCCESS = \"PLACE_ORDER_SUCCESS\";\nexport const PLACE_ORDER_FAILURE = \"PLACE_ORDER_FAILURE\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const addToCart = (product, qty, history) => {\n  return dispatch => {\n    try {\n      product.qty = qty;\n      dispatch({\n        type: ADD_TO_CART_REQUEST,\n        payload: {\n          product: product\n        }\n      });\n      history.push('/orders/cart');\n    } catch (error) {\n      dispatch({\n        type: ADD_TO_CART_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const incrementProductQty = productTd => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_PRODUCT_QTY,\n      payload: {\n        productId: productTd\n      }\n    });\n  };\n};\nexport const decrementProductQty = productTd => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_PRODUCT_QTY,\n      payload: {\n        productId: productTd\n      }\n    });\n  };\n};\nexport const removeCartItem = productId => {\n  return dispatch => {\n    dispatch({\n      type: REMOVE_CART_ITEM,\n      payload: productId\n    });\n  };\n};\nexport const makeStripePayment = (paymentBody, history, order) => {\n  return async dispatch => {\n    dispatch({\n      type: MAKE_PAYMENT_REQUEST\n    });\n\n    try {\n      if (AuthUtil.isLoggedIn()) {\n        let token = AuthUtil.getToken();\n        TokenUtil.setHeaders(token);\n        TokenUtil.setStripeKey();\n        let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/payments/checkout`;\n        let response = await axios.post(dataUrl, paymentBody);\n        dispatch({\n          type: MAKE_PAYMENT_SUCCESS,\n          payload: response.data.msg\n        });\n        dispatch(placeOrder(order, history));\n      }\n    } catch (error) {\n      var _error$response, _error$response2;\n\n      console.error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      dispatch({\n        type: MAKE_PAYMENT_FAILURE,\n        payload: error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n      });\n    }\n  };\n};\nexport const placeOrder = (order, history) => {\n  return async dispatch => {\n    dispatch({\n      type: PLACE_ORDER_REQUEST\n    });\n\n    try {\n      if (AuthUtil.isLoggedIn()) {\n        let token = AuthUtil.getToken();\n        setHeaders(token);\n        let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/orders/place`;\n        let response = await axios.post(dataUrl, order);\n        dispatch({\n          type: PLACE_ORDER_SUCCESS,\n          payload: response.data.order\n        });\n        history.push('/orders/success');\n      }\n    } catch (error) {\n      var _error$response3, _error$response4;\n\n      console.error(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      dispatch({\n        type: PLACE_ORDER_FAILURE,\n        payload: error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data\n      });\n    }\n  };\n};\nexport const clearCart = () => {\n  return dispatch => dispatch({\n    type: CLEAR_CART\n  });\n};","map":{"version":3,"sources":["F:/Workspace/Projects/Brains-Kart/brainskart-ecommerce-project/client/src/redux/orders/orders.action.ts"],"names":["AuthUtil","TokenUtil","axios","setHeaders","ADD_TO_CART_REQUEST","ADD_TO_CART_FAILURE","INCREMENT_PRODUCT_QTY","DECREMENT_PRODUCT_QTY","REMOVE_CART_ITEM","MAKE_PAYMENT_REQUEST","MAKE_PAYMENT_SUCCESS","MAKE_PAYMENT_FAILURE","PLACE_ORDER_REQUEST","PLACE_ORDER_SUCCESS","PLACE_ORDER_FAILURE","CLEAR_CART","addToCart","product","qty","history","dispatch","type","payload","push","error","incrementProductQty","productTd","productId","decrementProductQty","removeCartItem","makeStripePayment","paymentBody","order","isLoggedIn","token","getToken","setStripeKey","dataUrl","process","env","REACT_APP_SERVER_URL","response","post","data","msg","placeOrder","console","clearCart"],"mappings":"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","sourcesContent":["import {IProduct} from \"../../Modules/products/Models/IProduct\";\r\nimport * as AuthUtil from \"../../Authentication/AuthUtil\"\r\nimport * as TokenUtil from \"../../Authentication/TokenUtil\"\r\nimport axios from \"axios\";\r\nimport {setHeaders} from \"../../Authentication/TokenUtil\";\r\n\r\nexport const ADD_TO_CART_REQUEST : string = \"ADD_TO_CART_REQUEST\";\r\nexport const ADD_TO_CART_FAILURE : string = \"ADD_TO_CART_FAILURE\";\r\n\r\nexport const INCREMENT_PRODUCT_QTY : string = \"INCREMENT_PRODUCT_QTY\";\r\nexport const DECREMENT_PRODUCT_QTY : string = \"DECREMENT_PRODUCT_QTY\";\r\n\r\nexport const REMOVE_CART_ITEM : string = \"REMOVE_CART_ITEM\";\r\n\r\nexport const MAKE_PAYMENT_REQUEST : string = \"MAKE_PAYMENT_REQUEST\"\r\nexport const MAKE_PAYMENT_SUCCESS : string = \"MAKE_PAYMENT_SUCCESS\"\r\nexport const MAKE_PAYMENT_FAILURE : string = \"MAKE_PAYMENT_FAILURE\"\r\n\r\nexport const PLACE_ORDER_REQUEST : string = \"PLACE_ORDER_REQUEST\"\r\nexport const PLACE_ORDER_SUCCESS : string = \"PLACE_ORDER_SUCCESS\"\r\nexport const PLACE_ORDER_FAILURE : string = \"PLACE_ORDER_FAILURE\"\r\n\r\nexport const CLEAR_CART : string = \"CLEAR_CART\"\r\n\r\nexport const addToCart = (product : IProduct , qty : number , history : any) => {\r\n    return (dispatch : any) => {\r\n        try{\r\n            product.qty = qty;\r\n            dispatch({\r\n                type : ADD_TO_CART_REQUEST,\r\n                payload : {\r\n                    product : product\r\n                }\r\n            })\r\n            history.push('/orders/cart');\r\n        }\r\n        catch (error){\r\n            dispatch({\r\n                type : ADD_TO_CART_FAILURE,\r\n                payload : error\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const incrementProductQty = (productTd : string) => {\r\n    return (dispatch : any) => {\r\n        dispatch({\r\n            type : INCREMENT_PRODUCT_QTY,\r\n            payload : {\r\n                productId : productTd\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const decrementProductQty = (productTd : string) => {\r\n    return (dispatch : any) => {\r\n        dispatch({\r\n            type : DECREMENT_PRODUCT_QTY,\r\n            payload : {\r\n                productId : productTd\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const removeCartItem = (productId : string) => {\r\n    return (dispatch : any) => {\r\n        dispatch({\r\n            type : REMOVE_CART_ITEM,\r\n            payload : productId\r\n        })\r\n    }\r\n}\r\n\r\nexport const makeStripePayment = (paymentBody : any, history : any , order : any) => {\r\n    return async ( dispatch : any) => {\r\n        dispatch({\r\n            type : MAKE_PAYMENT_REQUEST\r\n        })\r\n        try{\r\n            if(AuthUtil.isLoggedIn()){\r\n                let token = AuthUtil.getToken();\r\n                TokenUtil.setHeaders(token as string);\r\n                TokenUtil.setStripeKey();\r\n                let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/payments/checkout`\r\n                let response = await axios.post(dataUrl , paymentBody)\r\n                dispatch({\r\n                    type : MAKE_PAYMENT_SUCCESS,\r\n                    payload : response.data.msg\r\n                })\r\n                dispatch(placeOrder(order , history))\r\n\r\n            }\r\n        }\r\n        catch (error){\r\n            console.error(error?.response?.data);\r\n            dispatch({type : MAKE_PAYMENT_FAILURE, payload : error?.response?.data});\r\n        }\r\n    }\r\n}\r\nexport const placeOrder = (order : any , history : any) => {\r\n    return async (dispatch : any) => {\r\n        dispatch({\r\n            type : PLACE_ORDER_REQUEST\r\n        })\r\n        try{\r\n            if(AuthUtil.isLoggedIn()){\r\n                let token = AuthUtil.getToken();\r\n                setHeaders(token as string);\r\n                let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/orders/place`\r\n                let response = await axios.post(dataUrl , order)\r\n                dispatch({\r\n                    type : PLACE_ORDER_SUCCESS,\r\n                    payload : response.data.order\r\n                })\r\n                history.push('/orders/success')\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error?.response?.data);\r\n            dispatch({type : PLACE_ORDER_FAILURE, payload : error?.response?.data});\r\n        }\r\n    }\r\n}\r\nexport const clearCart = () => {\r\n    return (dispatch : any) =>\r\n    dispatch({\r\n        type : CLEAR_CART\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}