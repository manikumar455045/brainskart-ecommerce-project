{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Projects\\\\Brains-Kart\\\\client\\\\src\\\\Modules\\\\users\\\\components\\\\register\\\\UserRegister.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport brand from \"../../../../Assets/img/brand.png\";\nimport * as userActions from \"../../../../redux/users/user.action\";\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet UserRegister = () => {\n  _s();\n\n  let dispatch = useDispatch();\n  let history = useHistory();\n  let [userState, setUserState] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  let [userErrorState, setUserErrorState] = useState({\n    nameError: \"\",\n    emailError: \"\",\n    passwordError: \"\"\n  }); //Validate Name\n\n  let validateUser = event => {\n    setUserState({ ...userState,\n      name: event.target.value\n    });\n    let regExp = /^[a-zA-Z0-9_]{5,10}$/;\n    !regExp.test(userState.name) ? setUserErrorState({ ...userErrorState,\n      nameError: 'Enter Proper name'\n    }) : setUserErrorState({ ...userErrorState,\n      nameError: ''\n    });\n  }; //Validate email\n\n\n  let validateEmail = event => {\n    setUserState({ ...userState,\n      email: event.target.value\n    });\n    let regExp = /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    !regExp.test(userState.email) ? setUserErrorState({ ...userErrorState,\n      emailError: 'Enter Proper email address'\n    }) : setUserErrorState({ ...userErrorState,\n      emailError: ''\n    });\n  }; // validate Password\n\n\n  let validatePassword = event => {\n    setUserState({ ...userState,\n      password: event.target.value\n    });\n    let regExp = /^[a-zA-Z0-9_]\\w{6,14}$/;\n    !regExp.test(event.target.value) ? setUserErrorState({ ...userErrorState,\n      passwordError: 'Enter a Proper Password'\n    }) : setUserErrorState({ ...userErrorState,\n      passwordError: ''\n    });\n  };\n\n  let submitRegisteredUser = event => {\n    event.preventDefault();\n    dispatch(userActions.userRegister(userState, history));\n  };\n\n  let handleGoogleRegister = () => {};\n\n  let handleGoogleRegisterFailure = () => {};\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(userState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(userErrorState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 m-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header bg-dark text-center text-white\",\n                children: \"Enter your details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body bg-form-light\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: submitRegisteredUser,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      name: \"name\",\n                      value: userState.name,\n                      type: \"text\",\n                      className: `form-control ${userErrorState.nameError.length > 0 ? 'is-invalid' : ''}`,\n                      placeholder: \"Name\",\n                      onChange: validateUser,\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 45\n                    }, this), userErrorState.nameError.length > 0 ? /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-danger font-weight-bold\",\n                      children: userErrorState.nameError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 82\n                    }, this) : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      name: \"email\",\n                      value: userState.email,\n                      type: \"email\",\n                      className: `form-control ${userErrorState.emailError.length > 0 ? 'is-invalid' : ''}`,\n                      placeholder: \"username\",\n                      onChange: validateEmail,\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 45\n                    }, this), userErrorState.emailError.length > 0 ? /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-danger\",\n                      children: userErrorState.emailError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 83\n                    }, this) : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      name: \"password\",\n                      value: userState.password,\n                      type: \"password\",\n                      className: `form-control ${userErrorState.passwordError.length > 0 ? 'is-invalid' : ''}`,\n                      placeholder: \"password\",\n                      onChange: validatePassword,\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 45\n                    }, this), userErrorState.passwordError.length > 0 ? /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-danger\",\n                      children: userErrorState.passwordError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 86\n                    }, this) : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-dark mb-3\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n                    clientId: \"509138529581-4u7c810o2a9kovq85cpirkijsk1s4a88.apps.googleusercontent.com\",\n                    onSuccess: handleGoogleRegister,\n                    onFailure: handleGoogleRegisterFailure,\n                    buttonText: \"Sign-up with Google\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"/users/login\",\n                        children: \"Login\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 44\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 44\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-footer bg-dark mt-3 text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: brand,\n                  width: \"150\",\n                  height: \"50\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserRegister, \"QQ/QZXNqy1Ag/Qm6VUmaLDUZgBU=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = UserRegister;\nexport default UserRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRegister\");","map":{"version":3,"sources":["F:/Workspace/Projects/Brains-Kart/client/src/Modules/users/components/register/UserRegister.tsx"],"names":["React","useState","Link","brand","userActions","useDispatch","useHistory","GoogleLogin","UserRegister","dispatch","history","userState","setUserState","name","email","password","userErrorState","setUserErrorState","nameError","emailError","passwordError","validateUser","event","target","value","regExp","test","validateEmail","validatePassword","submitRegisteredUser","preventDefault","userRegister","handleGoogleRegister","handleGoogleRegisterFailure","JSON","stringify","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,qCAA7B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAkBA,IAAIC,YAA+B,GAAG,MAAM;AAAA;;AACxC,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AACA,MAAIK,OAAO,GAAGJ,UAAU,EAAxB;AACA,MAAI,CAACK,SAAD,EAAaC,YAAb,IAA6BX,QAAQ,CAAQ;AAC7CY,IAAAA,IAAI,EAAG,EADsC;AAE7CC,IAAAA,KAAK,EAAG,EAFqC;AAG7CC,IAAAA,QAAQ,EAAG;AAHkC,GAAR,CAAzC;AAKA,MAAI,CAACC,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAa;AAC3DiB,IAAAA,SAAS,EAAG,EAD+C;AAE3DC,IAAAA,UAAU,EAAG,EAF8C;AAG3DC,IAAAA,aAAa,EAAG;AAH2C,GAAb,CAAlD,CARwC,CAcxC;;AACA,MAAIC,YAAY,GAAIC,KAAD,IAAiD;AAChEV,IAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAETE,MAAAA,IAAI,EAAGS,KAAK,CAACC,MAAN,CAAaC;AAFX,KAAD,CAAZ;AAIA,QAAIC,MAAM,GAAG,sBAAb;AACA,KAACA,MAAM,CAACC,IAAP,CAAYf,SAAS,CAACE,IAAtB,CAAD,GAA+BI,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAqBE,MAAAA,SAAS,EAAG;AAAjC,KAAD,CAAhD,GACID,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBE,MAAAA,SAAS,EAAG;AAAhC,KAAD,CADrB;AAEH,GARD,CAfwC,CAwBxC;;;AACA,MAAIS,aAAa,GAAIL,KAAD,IAAiD;AACjEV,IAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAETG,MAAAA,KAAK,EAAGQ,KAAK,CAACC,MAAN,CAAaC;AAFZ,KAAD,CAAZ;AAIA,QAAIC,MAAM,GAAG,iDAAb;AACA,KAACA,MAAM,CAACC,IAAP,CAAYf,SAAS,CAACG,KAAtB,CAAD,GAAgCG,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAqBG,MAAAA,UAAU,EAAG;AAAlC,KAAD,CAAjD,GACIF,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBG,MAAAA,UAAU,EAAG;AAAjC,KAAD,CADrB;AAEH,GARD,CAzBwC,CAkCxC;;;AACA,MAAIS,gBAAgB,GAAIN,KAAD,IAAiD;AACpEV,IAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeI,MAAAA,QAAQ,EAAGO,KAAK,CAACC,MAAN,CAAaC;AAAvC,KAAD,CAAZ;AACA,QAAIC,MAAM,GAAG,wBAAb;AACC,KAACA,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAAF,GACIP,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBI,MAAAA,aAAa,EAAG;AAApC,KAAD,CADrB,GAEIH,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBI,MAAAA,aAAa,EAAG;AAApC,KAAD,CAFrB;AAGH,GAND;;AAQA,MAAIS,oBAAoB,GAAIP,KAAD,IAA8C;AACrEA,IAAAA,KAAK,CAACQ,cAAN;AACArB,IAAAA,QAAQ,CAACL,WAAW,CAAC2B,YAAZ,CAAyBpB,SAAzB,EAAqCD,OAArC,CAAD,CAAR;AACH,GAHD;;AAIA,MAAIsB,oBAAoB,GAAG,MAAM,CAEhC,CAFD;;AAGA,MAAIC,2BAA2B,GAAG,MAAM,CAEvC,CAFD;;AAGA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA,gBAAMC,IAAI,CAACC,SAAL,CAAexB,SAAf;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAMuB,IAAI,CAACC,SAAL,CAAenB,cAAf;AAAN;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,yBAAf;AAAA,uCACI;AAAM,kBAAA,QAAQ,EAAEa,oBAAhB;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACI;AAAO,sBAAA,IAAI,EAAG,MAAd;AAAqB,sBAAA,KAAK,EAAIlB,SAAS,CAACE,IAAxC;AAA6C,sBAAA,IAAI,EAAC,MAAlD;AAAyD,sBAAA,SAAS,EAAG,gBAAeG,cAAc,CAACE,SAAf,CAAyBkB,MAAzB,GAAgC,CAAhC,GAAoC,YAApC,GAAmD,EAAI,EAA3I;AAA8I,sBAAA,WAAW,EAAC,MAA1J;AAAiK,sBAAA,QAAQ,EAAEf,YAA3K;AAAyL,sBAAA,QAAQ;AAAjM;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEKL,cAAc,CAACE,SAAf,CAAyBkB,MAAzB,GAAgC,CAAhC,gBAAoC;AAAO,sBAAA,SAAS,EAAC,8BAAjB;AAAA,gCAAiDpB,cAAc,CAACE;AAAhE;AAAA;AAAA;AAAA;AAAA,4BAApC,GAAyH,EAF9H;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAKI;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACI;AAAO,sBAAA,IAAI,EAAG,OAAd;AAAsB,sBAAA,KAAK,EAAEP,SAAS,CAACG,KAAvC;AAA8C,sBAAA,IAAI,EAAC,OAAnD;AAA2D,sBAAA,SAAS,EAAG,gBAAeE,cAAc,CAACG,UAAf,CAA0BiB,MAA1B,GAAiC,CAAjC,GAAqC,YAArC,GAAoD,EAAG,EAA7I;AAAgJ,sBAAA,WAAW,EAAC,UAA5J;AAAuK,sBAAA,QAAQ,EAAET,aAAjL;AAAgM,sBAAA,QAAQ;AAAxM;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEKX,cAAc,CAACG,UAAf,CAA0BiB,MAA1B,GAAiC,CAAjC,gBAAqC;AAAO,sBAAA,SAAS,EAAC,aAAjB;AAAA,gCAAgCpB,cAAc,CAACG;AAA/C;AAAA;AAAA;AAAA;AAAA,4BAArC,GAA0G,EAF/G;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,eASI;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACI;AAAO,sBAAA,IAAI,EAAC,UAAZ;AAAuB,sBAAA,KAAK,EAAER,SAAS,CAACI,QAAxC;AAAkD,sBAAA,IAAI,EAAC,UAAvD;AAAkE,sBAAA,SAAS,EAAG,gBAAeC,cAAc,CAACI,aAAf,CAA6BgB,MAA7B,GAAoC,CAApC,GAAwC,YAAxC,GAAuD,EAAG,EAAvJ;AAA0J,sBAAA,WAAW,EAAC,UAAtK;AAAiL,sBAAA,QAAQ,EAAER,gBAA3L;AAA6M,sBAAA,QAAQ;AAArN;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEKZ,cAAc,CAACI,aAAf,CAA6BgB,MAA7B,GAAoC,CAApC,gBAAwC;AAAO,sBAAA,SAAS,EAAC,aAAjB;AAAA,gCAAgCpB,cAAc,CAACI;AAA/C;AAAA;AAAA;AAAA;AAAA,4BAAxC,GAAgH,EAFrH;AAAA;AAAA;AAAA;AAAA;AAAA,0BATJ,eAaI;AAAQ,oBAAA,IAAI,EAAC,QAAb;AAAsB,oBAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbJ,eAcI;AAAA;AAAA;AAAA;AAAA,0BAdJ,eAeI,QAAC,WAAD;AACI,oBAAA,QAAQ,EAAC,0EADb;AAEI,oBAAA,SAAS,EAAEY,oBAFf;AAGI,oBAAA,SAAS,EAAEC,2BAHf;AAII,oBAAA,UAAU,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,0BAfJ,eAqBI;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,2CACG;AAAA,0EACA,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,0BArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ,eA+BI;AAAK,gBAAA,SAAS,EAAC,sCAAf;AAAA,uCACI;AAAK,kBAAA,GAAG,EAAE9B,KAAV;AAAiB,kBAAA,KAAK,EAAC,KAAvB;AAA6B,kBAAA,MAAM,EAAC,IAApC;AAAyC,kBAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CAtGD;;GAAIK,Y;UACeH,W,EACDC,U;;;KAFdE,Y;AAwGJ,eAAeA,YAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport bannerimg from \"../../../../Assets/Banner_Hamburger_400.webp\";\r\nimport {Link} from \"react-router-dom\";\r\nimport brand from \"../../../../Assets/img/brand.png\";\r\nimport register from \"../../../../Assets/register.jpg\"\r\nimport * as userActions from \"../../../../redux/users/user.action\";\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\n\r\ninterface IUser{\r\n    name: string,\r\n    email: string,\r\n    password : string\r\n}\r\ninterface IUserError{\r\n    nameError : string,\r\n    emailError : string,\r\n    passwordError : string\r\n}\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\nlet UserRegister : React.FC<IProps> = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let [userState , setUserState] = useState<IUser>({\r\n        name : '',\r\n        email : '',\r\n        password : ''\r\n    });\r\n    let [userErrorState, setUserErrorState] = useState<IUserError>({\r\n        nameError : \"\",\r\n        emailError : \"\",\r\n        passwordError : \"\"\r\n    });\r\n\r\n    //Validate Name\r\n    let validateUser = (event : React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserState({\r\n            ...userState,\r\n            name : event.target.value\r\n        })\r\n        let regExp = /^[a-zA-Z0-9_]{5,10}$/;\r\n        !regExp.test(userState.name) ? setUserErrorState({...userErrorState , nameError : 'Enter Proper name'}) :\r\n            setUserErrorState({...userErrorState, nameError : ''})\r\n    }\r\n    //Validate email\r\n    let validateEmail = (event : React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserState({\r\n            ...userState,\r\n            email : event.target.value\r\n        })\r\n        let regExp = /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        !regExp.test(userState.email) ? setUserErrorState({...userErrorState , emailError : 'Enter Proper email address'}) :\r\n            setUserErrorState({...userErrorState, emailError : ''})\r\n    }\r\n    // validate Password\r\n    let validatePassword = (event : React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserState({...userState, password : event.target.value});\r\n        let regExp = /^[a-zA-Z0-9_]\\w{6,14}$/;\r\n        (!regExp.test(event.target.value)) ?\r\n            setUserErrorState({...userErrorState, passwordError : 'Enter a Proper Password'}) :\r\n            setUserErrorState({...userErrorState, passwordError : ''})\r\n    };\r\n\r\n    let submitRegisteredUser = (event : React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        dispatch(userActions.userRegister(userState , history));\r\n    }\r\n    let handleGoogleRegister = () => {\r\n\r\n    }\r\n    let handleGoogleRegisterFailure = () => {\r\n\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            <pre>{JSON.stringify(userState)}</pre>\r\n            <pre>{JSON.stringify(userErrorState)}</pre>\r\n            <section className=\"mt-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col-md-4 m-auto\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header bg-dark text-center text-white\">Enter your details</div>\r\n                                <div className=\"card-body bg-form-light\">\r\n                                    <form onSubmit={submitRegisteredUser}>\r\n                                        <div className=\"mb-3\">\r\n                                            <input name = \"name\" value = {userState.name}type=\"text\" className={`form-control ${userErrorState.nameError.length>0 ? 'is-invalid' : '' }`} placeholder=\"Name\" onChange={validateUser} required/>\r\n                                            {userErrorState.nameError.length>0 ? <small className=\"text-danger font-weight-bold\">{userErrorState.nameError}</small> : ''}\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <input name = \"email\" value={userState.email} type=\"email\" className={`form-control ${userErrorState.emailError.length>0 ? 'is-invalid' : ''}`} placeholder=\"username\" onChange={validateEmail} required/>\r\n                                            {userErrorState.emailError.length>0 ? <small className=\"text-danger\">{userErrorState.emailError}</small> : ''}\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <input name=\"password\" value={userState.password} type=\"password\" className={`form-control ${userErrorState.passwordError.length>0 ? 'is-invalid' : ''}`} placeholder=\"password\" onChange={validatePassword} required/>\r\n                                            {userErrorState.passwordError.length>0 ? <small className=\"text-danger\">{userErrorState.passwordError}</small> : ''}\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-dark mb-3\">Submit</button>\r\n                                        <hr/>\r\n                                        <GoogleLogin\r\n                                            clientId=\"509138529581-4u7c810o2a9kovq85cpirkijsk1s4a88.apps.googleusercontent.com\"\r\n                                            onSuccess={handleGoogleRegister}\r\n                                            onFailure={handleGoogleRegisterFailure}\r\n                                            buttonText=\"Sign-up with Google\"\r\n                                        />\r\n                                        <div className=\"mt-3\">\r\n                                           <span>Already have an account?\r\n                                           <Link to=\"/users/login\">Login</Link>\r\n                                           </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"card-footer bg-dark mt-3 text-center\">\r\n                                    <img src={brand} width=\"150\" height=\"50\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UserRegister;"]},"metadata":{},"sourceType":"module"}