[{"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\index.tsx":"1","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\reportWebVitals.ts":"2","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\store.ts":"3","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\App.tsx":"4","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\rootReducer.ts":"5","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\users\\user.action.ts":"6","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\router\\PrivateRoute.tsx":"7","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\layout\\components\\navbar\\Navbar.tsx":"8","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\layout\\components\\home\\Home.tsx":"9","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\layout\\components\\alert\\Alert.tsx":"10","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\orders\\components\\checkout\\Checkout.tsx":"11","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\orders\\components\\order-list\\OrderList.tsx":"12","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\users\\components\\login\\UserLogin.tsx":"13","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\orders\\components\\cart\\Cart.tsx":"14","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\orders\\components\\order-success\\OrderSuccess.tsx":"15","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\womens-collection\\WomensCollection.tsx":"16","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\mens-collection\\MensCollection.tsx":"17","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\users\\components\\profile\\UserProfile.tsx":"18","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\users\\components\\register\\UserRegister.tsx":"19","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\kids-collection\\KidsCollection.tsx":"20","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\upload-product\\UploadProduct.tsx":"21","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\product-details\\ProductDetail.tsx":"22","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\users\\user.reducer.ts":"23","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\alert\\alert.reducer.ts":"24","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\product\\product.reducer.ts":"25","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\orders\\orders.reducer.ts":"26","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\alert\\alert.action.ts":"27","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Authentication\\AuthUtil.ts":"28","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Authentication\\TokenUtil.ts":"29","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\orders\\orders.action.ts":"30","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\product\\product.action.ts":"31","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\CartFunctions.ts":"32","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\layout\\components\\spinner\\Spinner.tsx":"33"},{"size":855,"mtime":1626871089752,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":344,"mtime":1626864421299,"results":"37","hashOfConfig":"35"},{"size":2694,"mtime":1632159070430,"results":"38","hashOfConfig":"35"},{"size":486,"mtime":1629789334891,"results":"39","hashOfConfig":"35"},{"size":6278,"mtime":1634736481240,"results":"40","hashOfConfig":"35"},{"size":441,"mtime":1632158890722,"results":"41","hashOfConfig":"35"},{"size":5522,"mtime":1638292756751,"results":"42","hashOfConfig":"35"},{"size":836,"mtime":1626938467987,"results":"43","hashOfConfig":"35"},{"size":1201,"mtime":1627561561952,"results":"44","hashOfConfig":"35"},{"size":9189,"mtime":1636382809435,"results":"45","hashOfConfig":"35"},{"size":3530,"mtime":1638342864015,"results":"46","hashOfConfig":"35"},{"size":5267,"mtime":1636388333733,"results":"47","hashOfConfig":"35"},{"size":5977,"mtime":1630399716021,"results":"48","hashOfConfig":"35"},{"size":7652,"mtime":1636394849333,"results":"49","hashOfConfig":"35"},{"size":3405,"mtime":1638296099266,"results":"50","hashOfConfig":"35"},{"size":3416,"mtime":1638294866601,"results":"51","hashOfConfig":"35"},{"size":11300,"mtime":1631091797111,"results":"52","hashOfConfig":"35"},{"size":6551,"mtime":1636374585217,"results":"53","hashOfConfig":"35"},{"size":3408,"mtime":1629885611863,"results":"54","hashOfConfig":"35"},{"size":7123,"mtime":1632153907692,"results":"55","hashOfConfig":"35"},{"size":4433,"mtime":1638295073411,"results":"56","hashOfConfig":"35"},{"size":4178,"mtime":1634055044361,"results":"57","hashOfConfig":"35"},{"size":770,"mtime":1627557284035,"results":"58","hashOfConfig":"35"},{"size":3282,"mtime":1629704024821,"results":"59","hashOfConfig":"35"},{"size":4387,"mtime":1636558118660,"results":"60","hashOfConfig":"35"},{"size":772,"mtime":1627561562018,"results":"61","hashOfConfig":"35"},{"size":256,"mtime":1627634392063,"results":"62","hashOfConfig":"35"},{"size":367,"mtime":1635500464712,"results":"63","hashOfConfig":"35"},{"size":5375,"mtime":1636558887857,"results":"64","hashOfConfig":"35"},{"size":5024,"mtime":1629704024873,"results":"65","hashOfConfig":"35"},{"size":574,"mtime":1629979749385,"results":"66","hashOfConfig":"35"},{"size":361,"mtime":1629696572382,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"tq0koi",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"71"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"71"},"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\index.tsx",["150","151"],"import '@fortawesome/fontawesome-free/css/all.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'mdbootstrap/css/mdb.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store = {store}>\n   <App />\n   </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["152","153"],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\reportWebVitals.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\store.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\App.tsx",["154"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter , Switch , Route} from 'react-router-dom'\nimport Navbar from './Modules/layout/components/navbar/Navbar';\nimport Home from './Modules/layout/components/home/Home';\nimport Cart from './Modules/orders/components/cart/Cart';\nimport Checkout from './Modules/orders/components/checkout/Checkout';\nimport OrderList from './Modules/orders/components/order-list/OrderList';\nimport OrderSuccess from './Modules/orders/components/order-success/OrderSuccess';\nimport UserLogin from './Modules/users/components/login/UserLogin';\nimport UserRegister from './Modules/users/components/register/UserRegister';\nimport UploadProduct from './Modules/products/components/upload-product/UploadProduct';\nimport WomensCollection from './Modules/products/components/womens-collection/WomensCollection';\nimport KidsCollection from './Modules/products/components/kids-collection/KidsCollection';\nimport MensCollection from './Modules/products/components/mens-collection/MensCollection';\nimport Alert from \"./Modules/layout/components/alert/Alert\";\nimport UserProfile from \"./Modules/users/components/profile/UserProfile\";\nimport PrivateRoute from \"./router/PrivateRoute\";\nimport * as userActions from \"./redux/users/user.action\";\nimport {useDispatch} from \"react-redux\";\nimport ProductDetail from \"./Modules/products/components/product-details/ProductDetail\";\nlet App = () => {\n    let dispatch =useDispatch();\n    useEffect(() => {\n        dispatch(userActions.getUserInfo())\n    },[])\n return (\n   <React.Fragment>\n     <BrowserRouter>\n     <Navbar />\n         <Alert/>\n     <Switch>\n     <Route exact path=\"/\" component={Home}/>\n             <Route exact path=\"/products/men\" component={MensCollection}/>\n             <Route exact path=\"/products/kids\" component={KidsCollection}/>\n             <Route exact path=\"/products/women\" component={WomensCollection}/>\n             <PrivateRoute exact path=\"/products/upload\" component={UploadProduct}/>\n             <Route exact path=\"/products/:productId\" component={ProductDetail}/>\n             <PrivateRoute exact path=\"/orders/cart\" component={Cart}/>\n             <Route exact path=\"/orders/list\" component={OrderList}/>\n             <PrivateRoute exact path=\"/orders/checkout\" component={Checkout}/>\n             <Route exact path=\"/orders/success\" component={OrderSuccess}/>\n             <Route exact path=\"/users/login\" component={UserLogin}/>\n             <Route exact path=\"/users/register\" component={UserRegister}/>\n         <PrivateRoute exact path=\"/users/profile\" component={UserProfile}/>\n     </Switch>\n     </BrowserRouter>\n   </React.Fragment>\n ) \n}\n\nexport default App;\n","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\rootReducer.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\users\\user.action.ts",["155"],"import axios from 'axios';\r\nimport * as alertActions from '../alert/alert.action';\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as AuthUtil from '../../Authentication/AuthUtil'\r\nimport {setHeaders} from \"../../Authentication/TokenUtil\";\r\nimport {IAddress} from \"../../Modules/users/models/IUser\";\r\n\r\n\r\nexport  const USER_REGISTER_REQUEST : string = \"USER_REGISTER_REQUEST\"\r\nexport  const USER_REGISTER_SUCCESS : string = \"USER_REGISTER_SUCCESS\"\r\nexport  const USER_REGISTER_FAILURE : string = \"USER_REGISTER_FAILURE\"\r\n\r\nexport  const GOOGLE_REGISTER_REQUEST : string = \"GOOGLE_REGISTER_REQUEST\"\r\nexport  const GOOGLE_REGISTER_SUCCESS : string = \"GOOGLE_REGISTER_SUCCESS\"\r\nexport  const GOOGLE_REGISTER_FAILURE : string = \"GOOGLE_REGISTER_FAILURE\"\r\n\r\nexport  const USER_LOGIN_REQUEST : string = \"USER_LOGIN_REQUEST\"\r\nexport  const USER_LOGIN_SUCCESS : string = \"USER_LOGIN_SUCCESS\"\r\nexport  const USER_LOGIN_FAILURE : string = \"USER_LOGIN_FAILURE\"\r\n\r\nexport  const USER_INFO_REQUEST : string = \"USER_INFO_REQUEST\"\r\nexport  const USER_INFO_SUCCESS : string = \"USER_INFO_SUCCESS\"\r\nexport  const USER_INFO_FAILURE : string = \"USER_INFO_FAILURE\"\r\n\r\nexport const UPDATE_ADDRESS_REQUEST : string = \"UPDATE_ADDRESS_REQUEST\"\r\nexport const UPDATE_ADDRESS_SUCCESS : string = \"UPDATE_ADDRESS_SUCCESS\"\r\nexport const UPDATE_ADDRESS_FAILURE : string = \"UPDATE_ADDRESS_REQUEST\"\r\n\r\nexport const LOGOUT_USER : string = \"LOGOUT_USER\"\r\n\r\ninterface  IUser{\r\n    name? : string,\r\n    email : string,\r\n    password: string\r\n}\r\n//register user\r\nexport const userRegister = (user : IUser , history : any) => {\r\n    return async (dispatch : any) =>{\r\n        dispatch({\r\n            type : USER_REGISTER_REQUEST\r\n        })\r\n           try{\r\n               let dataUrl : string | undefined = `${process.env.REACT_APP_SERVER_URL}/api/users/register`\r\n               let response = await axios.post(dataUrl , user)\r\n               dispatch({\r\n                   type : USER_REGISTER_SUCCESS,\r\n                   payload : response.data\r\n               })\r\n               dispatch(alertActions.displayAlert(response.data.msg ,'success')) // alert message\r\n               history.push('/users/login');\r\n           }\r\n          catch (error) {\r\n            dispatch({\r\n                type : USER_REGISTER_FAILURE,\r\n                payload : error\r\n            })\r\n          }\r\n    }\r\n}\r\n//login user\r\n\r\nexport  const loginUser = (user : IUser , history : any) => {\r\n    return async (dispatch : any) => {\r\n        dispatch({\r\n            type : USER_LOGIN_REQUEST\r\n        })\r\n        try{\r\n            let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/users/login`\r\n            let response =  await  axios.post(dataUrl , user)\r\n            dispatch({\r\n                type : USER_LOGIN_SUCCESS,\r\n                payload : response.data\r\n            })\r\n            dispatch(getUserInfo());\r\n            dispatch(alertActions.displayAlert(response.data.msg , 'success'));\r\n            history.push('/');\r\n        }\r\n        catch (error){\r\n            dispatch({\r\n                type : USER_LOGIN_FAILURE,\r\n                payload : error\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n    return async (dispatch: any) => {\r\n        dispatch({\r\n            type: USER_INFO_REQUEST\r\n        })\r\n        try {\r\n            if (AuthUtil.isLoggedIn()) {\r\n                let token: string | null = AuthUtil.getToken();\r\n                setHeaders(token as string);\r\n                let datUrl = `${process.env.REACT_APP_SERVER_URL}/api/users/`\r\n                let response = await axios.get(datUrl);\r\n                dispatch({\r\n                    type: USER_INFO_SUCCESS,\r\n                    payload:{\r\n                        response : response.data,\r\n                        token : AuthUtil.getToken()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        catch(error){\r\n            dispatch({\r\n                type : USER_INFO_FAILURE,\r\n                payload :error\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return (dispatch : any) => {\r\n        dispatch({\r\n            type : LOGOUT_USER\r\n        })\r\n        dispatch(alertActions.displayAlert(\"You have logged out\" , \"success\"));\r\n    }\r\n}\r\n\r\nexport const updateAddress = (address : IAddress) => {\r\n    return async (dispatch : any) => {\r\n        dispatch({\r\n            type : UPDATE_ADDRESS_REQUEST\r\n        })\r\n        try{\r\n            if(AuthUtil.isLoggedIn()){\r\n                setHeaders(AuthUtil.getToken() as string);\r\n                let dataUrl = `${process.env.REACT_APP_SERVER_URL}/api/users/address`\r\n               let response = await axios.post(dataUrl, address)\r\n                dispatch({\r\n                    type : UPDATE_ADDRESS_SUCCESS,\r\n                    payload : response.data\r\n                })\r\n                dispatch(getUserInfo());\r\n                dispatch(alertActions.displayAlert(response.data.msg, 'success'))\r\n            }\r\n        }\r\n        catch (error){\r\n            dispatch({\r\n                type : UPDATE_ADDRESS_FAILURE,\r\n                payload : error\r\n            })\r\n        }\r\n    }\r\n}\r\n//google login or signup\r\nexport const googleLogin = (tokenID : any , history : any) => {\r\n    return async (dispatch : any) => {\r\n        dispatch({\r\n            type : GOOGLE_REGISTER_REQUEST\r\n        })\r\n        try{\r\n            let dataUrl : string | undefined = `${process.env.REACT_APP_SERVER_URL}/api/users/GoogleLogin`\r\n            let response = await axios.post(dataUrl , {tokenID})\r\n            console.log(response);\r\n            dispatch({\r\n                type : GOOGLE_REGISTER_SUCCESS,\r\n                payload : {\r\n                    token : response.data.token\r\n                }\r\n            })\r\n            dispatch(getUserInfo())\r\n            dispatch(alertActions.displayAlert(response.data.msg , \"success\"));\r\n            history.push(\"/\");\r\n        }\r\n        catch (error){\r\n            dispatch({\r\n                type : GOOGLE_REGISTER_FAILURE,\r\n                payload : {\r\n                    error : error\r\n                }\r\n            })\r\n            dispatch(alertActions.displayAlert(error.message , \"danger\"))\r\n            console.log(error)\r\n        }\r\n    }\r\n}","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\router\\PrivateRoute.tsx",["156","157"],"import React from \"react\";\r\nimport {Route , Redirect , RouteProps} from 'react-router-dom';\r\nimport * as AuthUtil from \"../Authentication/AuthUtil\";\r\n\r\ninterface Iprops{\r\n\r\n}\r\n// @ts-ignore\r\nlet PrivateRoute = ({component : Component , ...rest}) => {\r\n    return <Route {...rest} render={(props) => {\r\n        return !AuthUtil.isLoggedIn() ? <Redirect to=\"/users/login\"/> : <Component {...props}/>\r\n    }}/>\r\n};\r\nexport default PrivateRoute;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\layout\\components\\navbar\\Navbar.tsx",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\layout\\components\\home\\Home.tsx",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\layout\\components\\alert\\Alert.tsx",["158"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport * as alertActions from '../../../../redux/alert/alert.action';\r\nimport * as alertReducer from '../../../../redux/alert/alert.reducer';\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\ninterface AlertState {\r\n    alerts : alertReducer.AlertState\r\n}\r\n\r\nlet Alert : React.FC<IProps> = () => {\r\n    let alertState : alertReducer.AlertState = useSelector((state : AlertState) => {\r\n        return state.alerts;\r\n    })\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                alertState.alerts.length > 0 &&\r\n                    <div className={`alert alert-${alertState.alerts[0].color} alert-dismissible m-3 fixed-top animated slideInDown`}>\r\n                        {alertState.alerts.map(alert => {\r\n                            return (\r\n                                <div key = {alert.id}>\r\n                                    <small>{alert.message}</small>\r\n                                </div>\r\n                            )\r\n                        } )}\r\n                        <button className='btn-close'></button>\r\n                    </div>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Alert;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\orders\\components\\checkout\\Checkout.tsx",["159"],"import React from \"react\";\r\nimport * as userReducer from '../../../../redux/users/user.reducer';\r\nimport * as orderReducer from '../../../../redux/orders/orders.reducer';\r\nimport * as orderActions from '../../../../redux/orders/orders.action';\r\nimport {useSelector , useDispatch} from \"react-redux\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {calculateGrandTotal, calculateTax, calculateTotal} from \"../../../../CartFunctions\";\r\nimport StripeCheckout from \"react-stripe-checkout\"\r\nimport product from \"../../../../../../Models/product\";\r\n\r\ninterface IProps{\r\n\r\n}\r\ninterface IUser{\r\n    users : userReducer.UserState\r\n}\r\ninterface IOrder {\r\n    orders : orderReducer.orderState\r\n}\r\n\r\n\r\n\r\nlet Checkout : React.FC<IProps> = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let userState : userReducer.UserState = useSelector((state : IUser) => {\r\n        return state.users\r\n    })\r\n    let orderState : orderReducer.orderState = useSelector((state : IOrder) => {\r\n        return state.orders\r\n    })\r\n\r\n\r\n    // @ts-ignore\r\n    let handlePayment = (token? , addresses?) => {\r\n       /* console.log(token)*/\r\n        /*console.log(addresses)*/\r\n        const body = {\r\n            product : {\r\n                name : `${orderState.cartItems[0].name} and others`,\r\n                amount : calculateGrandTotal(orderState.cartItems)*100,\r\n                currency : 'INR',\r\n            },\r\n            customer : {\r\n                name : userState.user.name\r\n            },\r\n            description : \"Shopping from BrainsKart\",\r\n            email : token.email,\r\n            source : token.id,\r\n            stripeTokenType : token.type\r\n        }\r\n        let items = orderState.cartItems.map((product) =>{\r\n            return{\r\n                name : product.name,\r\n                brand : product.brand,\r\n                price : product.price,\r\n                qty : product.qty\r\n            }\r\n        } )\r\n        let order = {\r\n            items : items,\r\n            tax : calculateTax(orderState.cartItems),\r\n            total : calculateGrandTotal(orderState.cartItems)\r\n        }\r\n        dispatch(orderActions.makeStripePayment(body , history, order))\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            {/*<pre>{JSON.stringify(userState)}</pre>\r\n            <pre>{JSON.stringify(orderState)}</pre>*/}\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <p className=\"h4 float-left\">Billing Address</p>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <Link to={`/users/profile`} className=\"btn btn-brown text-dark btn-sm float-right\">Update Address</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                {\r\n                                    userState.user && userState.user.address &&\r\n                                    <ul className=\"list-group\">\r\n                                        <li className=\"list-group-item\">Flat : {userState.user.address.flat}</li>\r\n                                        <li className=\"list-group-item\">Street : {userState.user.address.street}</li>\r\n                                        <li className=\"list-group-item\">Landmark : {userState.user.address.landmark}</li>\r\n                                        <li className=\"list-group-item\">City : {userState.user.address.city}</li>\r\n                                        <li className=\"list-group-item\">State : {userState.user.address.state}</li>\r\n                                        <li className=\"list-group-item\">Country : {userState.user.address.country}</li>\r\n                                        <li className=\"list-group-item\">Pin : {userState.user.address.pin}</li>\r\n                                    </ul>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card mt-3\">\r\n                            <div className=\"card-header bg-dark text-brown\">\r\n                                <p className=\"h4\">Payment Details</p>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\"\r\n                                               id=\"flexRadioDefault1\" disabled/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Cash On Delivery - Currently unavailable\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\"\r\n                                               id=\"flexRadioDefault2\" checked={true}/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\">\r\n                                            Credit Card Payment\r\n                                        </label>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <p className=\"h4\">Your Cart</p>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ul className=\"list-group\">\r\n                                    {\r\n                                        orderState.cartItems.length>0 &&\r\n                                            orderState.cartItems.map(cartItem => {\r\n                                                return(\r\n                                                    <li key={cartItem._id} className=\"list-group-item\">\r\n                                                        <div className=\"row align-items-center\">\r\n                                                            <div className=\"col-md-2\">\r\n                                                                <img src={cartItem.image} width=\"50\" height=\"75\" alt=\"\"/>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-8\">\r\n                                                                <small>{cartItem.name}</small><br/>\r\n                                                                <small><b>&#8377; {cartItem.price.toFixed(2)}</b></small><br/>\r\n                                                                <small>Qty : {cartItem.qty}</small>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })\r\n                                    }\r\n                                </ul>\r\n                                <ul className=\"list-group mb-3\">\r\n                                    <li className=\"list-group-item\">Total : {calculateTotal(orderState.cartItems)} </li>\r\n                                    <li className=\"list-group-item\">Tax : {calculateTax(orderState.cartItems)} </li>\r\n                                    <li className=\"list-group-item\">Grand Total : {calculateGrandTotal(orderState.cartItems)} </li>\r\n                                </ul>\r\n                                <StripeCheckout\r\n                                    token={handlePayment}\r\n                                    name=\"Stripe Payment\"\r\n                                    stripeKey={process.env.REACT_APP_STRIPE_KEY as string}\r\n                                    description=\"Pay with Stripe\"\r\n                                    amount = {calculateGrandTotal(orderState.cartItems)*100}\r\n                                    currency=\"INR\"\r\n                                    zipCode\r\n                                    panelLabel=\"pay for {{amount}}\"\r\n                                >\r\n                                </StripeCheckout>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Checkout;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\orders\\components\\order-list\\OrderList.tsx",["160"],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\users\\components\\login\\UserLogin.tsx",["161"],"import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport bannerimg from \"../../../../Assets/Banner_Hamburger_400.webp\"\r\nimport brand from \"../../../../Assets/img/brand.png\"\r\nimport {prependListener} from \"cluster\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport  * as userActions from '../../../../redux/users/user.action';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\ninterface IUser {\r\n    email : string,\r\n    password : string\r\n}\r\ninterface  UserError{\r\n    emailError : string,\r\n    passwordError : string\r\n}\r\n\r\n\r\nlet UserLogin : React.FC<IProps> = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let [user , setUser] = useState<IUser>({\r\n        email : '',\r\n        password : ''\r\n    })\r\n\r\n    let [userError , setUserError] = useState<UserError>({\r\n        emailError : '',\r\n        passwordError : ''\r\n    })\r\n\r\n    //validate email\r\n    let validateUser = (event : React.ChangeEvent<HTMLInputElement>) => {\r\n        setUser({\r\n            ...user,\r\n            email : event.target.value\r\n        })\r\n        let regExp = /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        !regExp.test(user.email) ? setUserError({...userError, emailError : \"Enter proper email\"}) : setUserError({...userError , emailError : ''})\r\n    }\r\n\r\n    //validate password\r\n    let validatePassword = (event : React.ChangeEvent<HTMLInputElement>) => {\r\n        setUser({\r\n            ...user,\r\n            password : event.target.value\r\n        })\r\n        let regExp = /^[a-zA-Z0-9_]\\w{6,14}$/;\r\n        !regExp.test(user.password) ? setUserError({...userError, passwordError : 'Enter proper password'}) : setUserError({...userError , passwordError : ''})\r\n    }\r\n\r\n    //submit\r\n    let submitUser = (event : React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        dispatch(userActions.loginUser(user , history));\r\n    }\r\n    let handleGoogleLogin = (response : any) => {\r\n        dispatch(userActions.googleLogin(response.tokenId, history))\r\n        console.log(response)\r\n    }\r\n    let handleGoogleLoginFailure = (response: any) => {\r\n        console.log(response)\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            {/*<pre>{JSON.stringify(user)}</pre>\r\n            <pre>{JSON.stringify(userError)}</pre>*/}\r\n            <section className=\"mt-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col-md-4 m-auto\">\r\n                           <div className=\"card\">\r\n                                   <img src={bannerimg} className=\"img-responsive\" alt=\"\"/>\r\n                               <div className=\"card-body bg-form-light\">\r\n                                   <form onSubmit={submitUser}>\r\n                                       <div className=\"mb-3\">\r\n                                           <input type=\"text\" value = {user.email} className={`form-control ${userError.emailError.length > 0 ? 'is-invalid' : '' }`} onChange={validateUser} placeholder=\"username\" required/>\r\n                                           {userError.emailError.length>0 ? <small className=\"text-danger\">{userError.emailError}</small> : ''}\r\n                                       </div>\r\n                                       <div className=\"mb-3\">\r\n                                           <input type=\"password\" value = {user.password} className={`form-control ${userError.passwordError.length>0 ? 'is-invalid' : ''}`} onChange={validatePassword} placeholder=\"password\" required/>\r\n                                           {userError.passwordError.length>0 ? <small className=\"text-danger\">{userError.passwordError}</small> : ''}\r\n                                       </div>\r\n                                       <button type=\"submit\" className=\"btn btn-dark mb-3\">Submit</button>\r\n                                        <hr/>\r\n                                       <GoogleLogin\r\n                                           clientId=\"509138529581-4u7c810o2a9kovq85cpirkijsk1s4a88.apps.googleusercontent.com\"\r\n                                           onSuccess={handleGoogleLogin}\r\n                                           onFailure={handleGoogleLoginFailure}\r\n                                           buttonText=\"Google Login\"\r\n                                       />\r\n                                       <div className='mt-3'>\r\n                                           <span>New to Brains Kart?\r\n                                           <Link to=\"/users/register\">Register</Link>\r\n                                           </span>\r\n                                       </div>\r\n                                   </form>\r\n                               </div>\r\n                               <div className=\"card-footer bg-dark text-center\">\r\n                                   <img src={brand} width=\"150\" height=\"50\" alt=\"\"/>\r\n                               </div>\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UserLogin;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\orders\\components\\cart\\Cart.tsx",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\orders\\components\\order-success\\OrderSuccess.tsx",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\womens-collection\\WomensCollection.tsx",["162"],"import React, {useEffect} from \"react\";\r\nimport * as ProductReducer from \"../../../../redux/product/product.reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as ProductActions from \"../../../../redux/product/product.action\";\r\nimport Spinner from \"../../../layout/components/spinner/Spinner\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport * as orderActions from '../../../../redux/orders/orders.action'\r\nimport {IProduct} from \"../../Models/IProduct\";\r\n\r\ninterface IProps{\r\n\r\n}\r\ninterface IState{\r\n    products : ProductReducer.ProductState\r\n}\r\n\r\nlet WomensCollection : React.FC<IProps> = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let productState: ProductReducer.ProductState = useSelector((state:IState) => {\r\n        return state.products;\r\n    })\r\n    useEffect(() =>{\r\n        dispatch(ProductActions.getWomenProducts())\r\n    }, [])\r\n\r\n    let addToCart = (product: IProduct) => {\r\n        dispatch(orderActions.addToCart(product , 1 , history))\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                productState.loading? <Spinner/> :\r\n                    <section className=\"mt-3\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                    productState.products.length > 0 &&\r\n                                    productState.products.map((product) => {\r\n                                        return(\r\n                                            <React.Fragment>\r\n                                                <div key = {product._id} className=\"col\">\r\n                                                    <div className=\"card text-center\">\r\n                                                        <Link to={`/products/${product._id}`}><img src={product.image} className=\"img-fluid\" alt=\"\"/></Link>\r\n                                                        <div className=\"card-body text-center\">\r\n                                                            <ul className=\"list-group\">\r\n                                                                <li className=\"list-group-item\">\r\n                                                                    <p className=\"h5\">{product.name}</p>\r\n                                                                    <span>{product.brand}</span>\r\n                                                                    <p className=\"h6\">&#8377; {product.price.toFixed(2)}</p>\r\n                                                                    <button className=\"btn btn-brown btn-sm text-dark\" onClick={addToCart.bind(this, product)}>Add Cart</button>\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default WomensCollection;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\mens-collection\\MensCollection.tsx",["163"],"import React, {useEffect} from \"react\";\r\nimport * as ProductActions from '../../../../redux/product/product.action';\r\nimport * as ProductReducer from '../../../../redux/product/product.reducer';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Spinner from \"../../../layout/components/spinner/Spinner\";\r\nimport * as orderActions from '../../../../redux/orders/orders.action';\r\nimport {Link, useHistory} from \"react-router-dom\"\r\nimport {IProduct} from \"../../Models/IProduct\";\r\n\r\ninterface IProps{\r\n\r\n}\r\ninterface IState{\r\n    products : ProductReducer.ProductState\r\n}\r\n\r\nlet MensCollection : React.FC<IProps> = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let productState: ProductReducer.ProductState = useSelector((state:IState) => {\r\n        return state.products;\r\n    })\r\n\r\n    useEffect(() =>{\r\n        dispatch(ProductActions.getMensProducts())\r\n    }, [])\r\n\r\n    let addToCart = (product: IProduct) => {\r\n        dispatch(orderActions.addToCart(product , 1 , history))\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                productState.loading ? <Spinner/> :\r\n                    <section className=\"mt-3\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                    productState.products.length > 0 &&\r\n                                    productState.products.map((product) => {\r\n                                        return(\r\n                                            <React.Fragment>\r\n                                                <div key = {product._id} className=\"col-md-4 mt-3\">\r\n                                                    <div className=\"card text-center\">\r\n                                                        <Link to={`/products/${product._id}`}><img src={product.image} className=\"img-fluid\" alt=\"\"/></Link>\r\n                                                        <div className=\"card-body text-center\">\r\n                                                            <ul className=\"list-group\">\r\n                                                                <li className=\"list-group-item\">\r\n                                                                    <p className=\"h5\">{product.name}</p>\r\n                                                                    <span>{product.brand}</span>\r\n                                                                    <p className=\"h6\">&#8377; {product.price.toFixed(2)}</p>\r\n                                                                    <button className=\"btn btn-brown btn-sm text-dark\" onClick={addToCart.bind(this, product)} >Add Cart</button>\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MensCollection;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\users\\components\\profile\\UserProfile.tsx",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\users\\components\\register\\UserRegister.tsx",["164","165"],"import React, {useState} from \"react\";\r\nimport bannerimg from \"../../../../Assets/Banner_Hamburger_400.webp\";\r\nimport {Link} from \"react-router-dom\";\r\nimport brand from \"../../../../Assets/img/brand.png\";\r\nimport register from \"../../../../Assets/register.jpg\"\r\nimport * as userActions from \"../../../../redux/users/user.action\";\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\n\r\ninterface IUser{\r\n    name: string,\r\n    email: string,\r\n    password : string\r\n}\r\ninterface IUserError{\r\n    nameError : string,\r\n    emailError : string,\r\n    passwordError : string\r\n}\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\nlet UserRegister : React.FC<IProps> = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let [userState , setUserState] = useState<IUser>({\r\n        name : '',\r\n        email : '',\r\n        password : ''\r\n    });\r\n    let [userErrorState, setUserErrorState] = useState<IUserError>({\r\n        nameError : \"\",\r\n        emailError : \"\",\r\n        passwordError : \"\"\r\n    });\r\n\r\n    //Validate Name\r\n    let validateUser = (event : React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserState({\r\n            ...userState,\r\n            name : event.target.value\r\n        })\r\n        let regExp = /^[a-zA-Z0-9_]{5,10}$/;\r\n        !regExp.test(userState.name) ? setUserErrorState({...userErrorState , nameError : 'Enter Proper name'}) :\r\n            setUserErrorState({...userErrorState, nameError : ''})\r\n    }\r\n    //Validate email\r\n    let validateEmail = (event : React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserState({\r\n            ...userState,\r\n            email : event.target.value\r\n        })\r\n        let regExp = /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        !regExp.test(userState.email) ? setUserErrorState({...userErrorState , emailError : 'Enter Proper email address'}) :\r\n            setUserErrorState({...userErrorState, emailError : ''})\r\n    }\r\n    // validate Password\r\n    let validatePassword = (event : React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserState({...userState, password : event.target.value});\r\n        let regExp = /^[a-zA-Z0-9_]\\w{6,14}$/;\r\n        (!regExp.test(event.target.value)) ?\r\n            setUserErrorState({...userErrorState, passwordError : 'Enter a Proper Password'}) :\r\n            setUserErrorState({...userErrorState, passwordError : ''})\r\n    };\r\n\r\n    let submitRegisteredUser = (event : React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        dispatch(userActions.userRegister(userState , history));\r\n    }\r\n    let handleGoogleLogin = (response : any) => {\r\n        dispatch(userActions.googleLogin(response.tokenId, history))\r\n    }\r\n    let handleGoogleLoginFailure = (response: any) => {\r\n        console.log(response)\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            {/*<pre>{JSON.stringify(userState)}</pre>\r\n            <pre>{JSON.stringify(userErrorState)}</pre>*/}\r\n            <section className=\"mt-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col-md-4 m-auto\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header bg-dark text-center text-white\">Enter your details</div>\r\n                                <div className=\"card-body bg-form-light\">\r\n                                    <form onSubmit={submitRegisteredUser}>\r\n                                        <div className=\"mb-3\">\r\n                                            <input name = \"name\" value = {userState.name}type=\"text\" className={`form-control ${userErrorState.nameError.length>0 ? 'is-invalid' : '' }`} placeholder=\"Name\" onChange={validateUser} required/>\r\n                                            {userErrorState.nameError.length>0 ? <small className=\"text-danger font-weight-bold\">{userErrorState.nameError}</small> : ''}\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <input name = \"email\" value={userState.email} type=\"email\" className={`form-control ${userErrorState.emailError.length>0 ? 'is-invalid' : ''}`} placeholder=\"username\" onChange={validateEmail} required/>\r\n                                            {userErrorState.emailError.length>0 ? <small className=\"text-danger\">{userErrorState.emailError}</small> : ''}\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <input name=\"password\" value={userState.password} type=\"password\" className={`form-control ${userErrorState.passwordError.length>0 ? 'is-invalid' : ''}`} placeholder=\"password\" onChange={validatePassword} required/>\r\n                                            {userErrorState.passwordError.length>0 ? <small className=\"text-danger\">{userErrorState.passwordError}</small> : ''}\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-dark mb-3\">Submit</button>\r\n                                        <hr/>\r\n                                        <GoogleLogin\r\n                                            clientId=\"509138529581-4u7c810o2a9kovq85cpirkijsk1s4a88.apps.googleusercontent.com\"\r\n                                            onSuccess={handleGoogleLogin}\r\n                                            onFailure={handleGoogleLoginFailure}\r\n                                            buttonText=\"Google Login\"\r\n                                        />\r\n                                        <div className=\"mt-3\">\r\n                                           <span>Already have an account?\r\n                                           <Link to=\"/users/login\">Login</Link>\r\n                                           </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"card-footer bg-dark mt-3 text-center\">\r\n                                    <img src={brand} width=\"150\" height=\"50\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UserRegister;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\kids-collection\\KidsCollection.tsx",["166"],"import React, {useEffect} from \"react\";\r\nimport * as ProductReducer from \"../../../../redux/product/product.reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as ProductActions from \"../../../../redux/product/product.action\";\r\nimport Spinner from \"../../../layout/components/spinner/Spinner\";\r\nimport * as orderActions from '../../../../redux/orders/orders.action';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {IProduct} from \"../../Models/IProduct\";\r\n\r\ninterface IProps{\r\n\r\n}\r\ninterface IState{\r\n    products : ProductReducer.ProductState\r\n}\r\n\r\nlet KidsCollection : React.FC<IProps> = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let productState: ProductReducer.ProductState = useSelector((state:IState) => {\r\n        return state.products;\r\n    })\r\n    useEffect(() =>{\r\n        dispatch(ProductActions.getKidsProducts())\r\n    }, [])\r\n\r\n    let addToCart = (product: IProduct) => {\r\n        dispatch(orderActions.addToCart(product , 1 , history))\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                productState.loading ? <Spinner/> :\r\n                    <section className=\"mt-3\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                    productState.products.length > 0 &&\r\n                                    productState.products.map((product) => {\r\n                                        return(\r\n                                            <React.Fragment>\r\n                                                <div key = {product._id} className=\"col-md-3\">\r\n                                                    <div className=\"card text-center\">\r\n                                                        <Link to={`/products/${product._id}`}><img src={product.image} className=\"img-fluid\" alt=\"\"/></Link>\r\n                                                        <div className=\"card-body text-center\">\r\n                                                            <ul className=\"list-group\">\r\n                                                                <li className=\"list-group-item\">\r\n                                                                    <p className=\"h5\">{product.name}</p>\r\n                                                                    <span>{product.brand}</span>\r\n                                                                    <p className=\"h6\">&#8377; {product.price.toFixed(2)}</p>\r\n                                                                    <button className=\"btn btn-brown btn-sm text-dark\" onClick={addToCart.bind(this, product)} >Add Cart</button>\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default KidsCollection;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\upload-product\\UploadProduct.tsx",["167"],"import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport brand from \"../../../../Assets/img/brand.png\";\r\nimport {IProduct} from \"../../Models/IProduct\";\r\nimport * as ProductActions from \"../../../../redux/product/product.action\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useSelector} from 'react-redux';\r\nimport * as userReducer from '../../../../redux/users/user.reducer';\r\ninterface IProps{\r\n\r\n}\r\ninterface IState {\r\n    product : IProduct\r\n}\r\ninterface IUser{\r\n    users : userReducer.UserState\r\n}\r\nlet UploadProduct : React.FC<IProps> = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let userState : userReducer.UserState = useSelector((state : IUser) => {\r\n        return state.users;\r\n    })\r\n    let [productState , setProductState] = useState<IState>({\r\n        product : {} as IProduct\r\n    })\r\n\r\n    let UpdateInput = (event : React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n        setProductState({\r\n            product : {\r\n                ...productState.product,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        })\r\n    }\r\n    let UpdateImage = async (event : React.ChangeEvent<HTMLInputElement | any>) => {\r\n        let image : Blob = event.target.files[0];\r\n        let base64image : string | ArrayBuffer = await convertToBase64(image);\r\n        setProductState({\r\n            product : {\r\n                ...productState.product,\r\n                image : base64image.toString()\r\n            }\r\n        })\r\n    }\r\n\r\n    let convertToBase64 = (image : Blob) : Promise<string | ArrayBuffer> => {\r\n        return new Promise((resolve , reject) => {\r\n            let fileReader = new FileReader();\r\n            fileReader.readAsDataURL(image);\r\n            fileReader.addEventListener('load' , () => {\r\n                if(fileReader.result){\r\n                    resolve(fileReader.result)\r\n                }\r\n                else{\r\n                    reject(\"An error occured\")\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    let submitProduct = (event : React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        dispatch(ProductActions.uploadProduct(productState.product , history))\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            {/*<pre>{JSON.stringify(productState)}</pre>*/}\r\n            {\r\n                userState.user.isAdmin ?\r\n                    <section className=\"mt-3\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row text-center\">\r\n                                <div className=\"col-md-6 m-auto\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header bg-dark text-center text-white\">Enter the product details</div>\r\n                                        <div className=\"card-body bg-form-light\">\r\n                                            <form onSubmit={submitProduct}>\r\n                                                <div className=\"mb-3\">\r\n                                                    <input name = \"name\" type=\"text\" className=\"form-control\" onChange={UpdateInput} placeholder=\"Name\" required/>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <input name = \"brand\" type=\"text\" className=\"form-control\" onChange={UpdateInput} placeholder=\"Brand\" required/>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <input name = \"price\" type=\"text\" className=\"form-control\" onChange={UpdateInput} placeholder=\"price\" required/>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <input name = \"qty\" type=\"number\" className=\"form-control\" onChange={UpdateInput} placeholder=\"quantity\" required/>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <input type=\"file\" className=\"form-control\" onChange={UpdateImage} required/>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <select className=\"form-select\" name=\"category\" onChange={UpdateInput}>\r\n                                                        <option selected>Select Category</option>\r\n                                                        <option value=\"MEN\">Men</option>\r\n                                                        <option value=\"WOMEN\">Women</option>\r\n                                                        <option value=\"KIDS\">Kids</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <textarea name = \"description\" className=\"form-control\" rows={3} onChange={UpdateInput} placeholder=\"Description\" required/>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <textarea name=\"usage\" className=\"form-control\" rows={3} onChange={UpdateInput} placeholder=\"Usage\" required/>\r\n                                                </div>\r\n                                                <button type=\"submit\" className=\"btn btn-dark mb-3\">Submit</button>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"card-footer bg-dark text-center\">\r\n                                            <img src={brand} width=\"150\" height=\"50\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section> :\r\n                    <section className = \"mt-3\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col  align-items-center\">\r\n                                    <div className=\"lead\">Hey {userState.user.name} !!! You are not an admin to upload to Products..</div>\r\n                                    <div className=\"lead\">Please contact Administrator</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UploadProduct;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\products\\components\\product-details\\ProductDetail.tsx",["168"],"import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as ProductActions from \"../../../../redux/product/product.action\";\r\nimport * as ProductReducer from \"../../../../redux/product/product.reducer\";\r\nimport Spinner from \"../../../layout/components/spinner/Spinner\";\r\nimport Tilt from \"react-parallax-tilt\";\r\nimport * as orderActions from '../../../../redux/orders/orders.action';\r\n\r\ninterface IProps{}\r\ninterface UrlParams {\r\n    productId : string\r\n}\r\ninterface IState {\r\n    products : ProductReducer.ProductState\r\n}\r\ninterface IProductQty{\r\n    qty : string\r\n}\r\n\r\nlet ProductDetail : React.FC<IProps> = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let {productId} = useParams<UrlParams>();\r\n    useEffect(() => {\r\n        dispatch(ProductActions.getProduct(productId))\r\n    },[productId])\r\n    let ProductState : ProductReducer.ProductState = useSelector((state:IState) => {\r\n        return state.products\r\n    })\r\n    let [productQty , setProductQty] = useState<IProductQty>({\r\n        qty : ''\r\n    })\r\n    let updateQty = (event : React.ChangeEvent<HTMLSelectElement>) => {\r\n        setProductQty({\r\n            qty : event.target.value\r\n        })\r\n    }\r\n    let submitToCart = (event : React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        //dispatch action add to cart\r\n        dispatch(orderActions.addToCart(ProductState.product , Number(productQty.qty) , history))\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                ProductState.loading ? <Spinner/> :\r\n                    <section className=\"mt-5\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Tilt scale={1.25} transitionSpeed={3000}>\r\n                                            <img src={ProductState.product.image} className=\"img-fluid d-block\" width='300' height='320' alt=\"\"/>\r\n                                    </Tilt>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <p className=\"h3\">NAME : <span className='lead'>{ProductState.product.name}</span></p>\r\n                                    <p className=\"h3\">Brand : <span className='lead'>{ProductState.product.brand}</span></p>\r\n                                    <p className=\"h5\">Price : <b className=\"text-danger\">&#8377; {ProductState.product.price}</b></p>\r\n                                    <form onSubmit={submitToCart}>\r\n                                        <div className=\"form-group\">\r\n                                            <select\r\n                                                required\r\n                                                value={productQty.qty}\r\n                                                onChange={updateQty}\r\n                                                className=\"form-control\">\r\n                                                <option value=\"\">Select Qty</option>\r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                                <option value=\"5\">5</option>\r\n                                            </select>\r\n                                            <input type=\"submit\" className=\"btn btn-brown btn-sm text-dark\" value=\"add to Cart\"/>\r\n                                        </div>\r\n                                    </form>\r\n                                    <hr/>\r\n                                    <p className='lead'><span className='h3'>Details :</span> {ProductState.product.description}</p>\r\n                                    <hr/>\r\n                                    <p className='lead'><span className='h3'>Usage :</span> {ProductState.product.usage}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductDetail;","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\users\\user.reducer.ts",["169"],"import * as userActions from './user.action';\r\nimport {IUser} from \"../../Modules/users/models/IUser\";\r\nimport {USER_REGISTER_REQUEST} from \"./user.action\";\r\n\r\nexport interface UserState {\r\n    loading : boolean,\r\n    user : IUser,\r\n    isAuthenticated : boolean,\r\n    token : string,\r\n    errorMessage : string\r\n}\r\n\r\nlet initialstate : UserState = {\r\n    loading : false,\r\n    user : {} as IUser,\r\n    isAuthenticated : false,\r\n    token : '',\r\n    errorMessage : ''\r\n}\r\n\r\nexport const reducer = (state = initialstate , action : any) : UserState => {\r\n    switch (action.type){\r\n        case userActions.USER_REGISTER_REQUEST :\r\n            return ({\r\n                ...state,\r\n                loading : true\r\n            })\r\n        case userActions.USER_REGISTER_SUCCESS :\r\n            return ({\r\n                ...state,\r\n                loading : false\r\n            })\r\n        case userActions.USER_REGISTER_FAILURE :\r\n            return ({\r\n                ...state,\r\n                loading : false,\r\n                errorMessage : action.payload\r\n            })\r\n        case userActions.USER_LOGIN_REQUEST :\r\n            return ({\r\n                ...state,\r\n                loading : true\r\n            })\r\n        case userActions.USER_LOGIN_SUCCESS :\r\n            localStorage.setItem(process.env.REACT_APP_FEATURE_KEY as string, action.payload.token)\r\n            return ({\r\n                ...state,\r\n                loading : false,\r\n                isAuthenticated : true,\r\n                token : action.payload.token\r\n            })\r\n        case userActions.USER_LOGIN_FAILURE:\r\n            localStorage.removeItem(process.env.REACT_APP_FEATURE_KEY as string);\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                token : '',\r\n                isAuthenticated : false,\r\n                errorMessage : action.payload\r\n            };\r\n        case userActions.LOGOUT_USER :\r\n            localStorage.removeItem(process.env.REACT_APP_FEATURE_KEY as string);\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                token : '',\r\n                isAuthenticated : false\r\n            };\r\n        case userActions.USER_INFO_REQUEST :\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            };\r\n        case userActions.USER_INFO_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                user : action.payload.response,\r\n                token : action.payload.token,\r\n                isAuthenticated : true\r\n            }\r\n        case userActions.USER_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                errorMessage : action.payload\r\n            }\r\n        case userActions.UPDATE_ADDRESS_REQUEST :\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            }\r\n        case userActions.UPDATE_ADDRESS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading : false\r\n            }\r\n        case userActions.UPDATE_ADDRESS_FAILURE :\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                errorMessage : action.payload\r\n            }\r\n        case userActions.GOOGLE_REGISTER_REQUEST :\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            }\r\n        case userActions.GOOGLE_REGISTER_SUCCESS :\r\n            localStorage.setItem(process.env.REACT_APP_FEATURE_KEY as string, action.payload.token)\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                token : action.payload.token,\r\n                isAuthenticated : true\r\n            }\r\n        case userActions.GOOGLE_REGISTER_FAILURE :\r\n            localStorage.removeItem(process.env.REACT_APP_FEATURE_KEY as string)\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                token : '',\r\n                isAuthenticated : false,\r\n                errorMessage : action.payload.error\r\n            }\r\n        default : return state\r\n    }\r\n}","J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\alert\\alert.reducer.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\product\\product.reducer.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\orders\\orders.reducer.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\alert\\alert.action.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Authentication\\AuthUtil.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Authentication\\TokenUtil.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\orders\\orders.action.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\redux\\product\\product.action.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\CartFunctions.ts",[],"J:\\Workspace\\Projects\\Brains-Kart\\brainskart-ecommerce-project\\client\\src\\Modules\\layout\\components\\spinner\\Spinner.tsx",["170"],"import React from \"react\";\r\nimport image from \"../../../../Assets/img/spinner.gif\";\r\n\r\ninterface IProps{}\r\n\r\nlet Spinner:React.FC<IProps> = ({}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <img src={image} alt=\"\" className=\"d-block m-auto\"/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default Spinner;",{"ruleId":"171","severity":1,"message":"172","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":9},{"ruleId":"171","severity":1,"message":"175","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":14},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":26,"column":7,"nodeType":"182","endLine":26,"endColumn":9,"suggestions":"183"},{"ruleId":"171","severity":1,"message":"184","line":3,"column":9,"nodeType":"173","messageId":"174","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"185","line":2,"column":28,"nodeType":"173","messageId":"174","endLine":2,"endColumn":38},{"ruleId":"171","severity":1,"message":"186","line":5,"column":11,"nodeType":"173","messageId":"174","endLine":5,"endColumn":17},{"ruleId":"171","severity":1,"message":"187","line":3,"column":13,"nodeType":"173","messageId":"174","endLine":3,"endColumn":25},{"ruleId":"171","severity":1,"message":"188","line":9,"column":8,"nodeType":"173","messageId":"174","endLine":9,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":17,"column":7,"nodeType":"182","endLine":17,"endColumn":9,"suggestions":"189"},{"ruleId":"171","severity":1,"message":"190","line":5,"column":9,"nodeType":"173","messageId":"174","endLine":5,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":25,"column":8,"nodeType":"182","endLine":25,"endColumn":10,"suggestions":"191"},{"ruleId":"180","severity":1,"message":"181","line":26,"column":8,"nodeType":"182","endLine":26,"endColumn":10,"suggestions":"192"},{"ruleId":"171","severity":1,"message":"193","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":17},{"ruleId":"171","severity":1,"message":"194","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":25,"column":8,"nodeType":"182","endLine":25,"endColumn":10,"suggestions":"195"},{"ruleId":"171","severity":1,"message":"196","line":2,"column":9,"nodeType":"173","messageId":"174","endLine":2,"endColumn":13},{"ruleId":"180","severity":1,"message":"181","line":27,"column":7,"nodeType":"182","endLine":27,"endColumn":18,"suggestions":"197"},{"ruleId":"171","severity":1,"message":"198","line":3,"column":9,"nodeType":"173","messageId":"174","endLine":3,"endColumn":30},{"ruleId":"199","severity":1,"message":"200","line":6,"column":33,"nodeType":"201","messageId":"202","endLine":6,"endColumn":35},"@typescript-eslint/no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["203"],"no-negated-in-lhs",["204"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["205"],"'useDispatch' is defined but never used.","'RouteProps' is defined but never used.","'Iprops' is defined but never used.","'alertActions' is defined but never used.","'product' is defined but never used.",["206"],"'prependListener' is defined but never used.",["207"],["208"],"'bannerimg' is defined but never used.","'register' is defined but never used.",["209"],"'Link' is defined but never used.",["210"],"'USER_REGISTER_REQUEST' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"211","fix":"213"},{"desc":"211","fix":"214"},{"desc":"211","fix":"215"},{"desc":"211","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [dispatch]",{"range":"219","text":"220"},{"range":"221","text":"220"},{"range":"222","text":"220"},{"range":"223","text":"220"},{"range":"224","text":"220"},"Update the dependencies array to be: [dispatch, productId]",{"range":"225","text":"226"},[1539,1541],"[dispatch]",[487,489],[911,913],[910,912],[909,911],[933,944],"[dispatch, productId]"]